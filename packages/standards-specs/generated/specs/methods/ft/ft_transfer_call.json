{
  "name": "ft_transfer_call",
  "description": "Transfer tokens from one account to another contract. Transfer token/s and call a method on a receiver contract. A successful workflow will end in a success execution outcome to the callback on the MultiToken contract at the method `mt_resolve_transfer`. You can think of this as being similar to attaching NEAR tokens as a `deposit` to a function call. It allows you to attach any FungibleToken or NonFungibleToken in a call to a receiver contract.  ",
  "summary": "Transfers tokens from one account to another contract",
  "tags": [
    {
      "$ref": "../../tags/change.json"
    }
  ],
  "params": [{
    "name": "receiver_id",
    "summary": "Receiving account id",
    "description": "The valid NEAR account receiving the token",
    "schema" : {
    "$ref": "../../schemas/AccountId.json"
    },
    "required": true
  },
  {
    "name": "amount",
    "summary":"The amount of tokens to transfer",
    "description": "The amount of tokens to transfer",
    "schema": {
      "$ref": "../../schemas/U128.json"
    },
    "required": true
  }, 
  {
    "name": "memo",
    "summary": "Memo message to describe operation",
    "description": "For use cases that may benefit from indexing or providing information for a transfer",
    "schema": {
      "$ref": "../../schemas/Memo.json"
    },
    "required": false
  }
],
  "result": {
    "name": "FtTransferCallResult",
    "summary": "The amount optionally returned to sender",
    "description": "The amount returned to the sender, if resolve implmented",
    "schema": {
      "$ref":"../../schemas/U128.json"
    },
    "required": false
  }
}